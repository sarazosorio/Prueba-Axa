// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaAxa.Data;

#nullable disable

namespace PruebaAxa.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221109133823_DatosClienteEntity")]
    partial class DatosClienteEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaAxa.Models.Ciudad", b =>
                {
                    b.Property<int>("idCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCiudad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCiudad"));

                    b.Property<string>("nombreCiudad")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombreCiudad");

                    b.HasKey("idCiudad");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("PruebaAxa.Models.DatosCliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<byte[]>("fechaGrabacion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("fechaGrabacion");

                    b.Property<string>("identificacionCliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("identificacionCliente");

                    b.Property<string>("numeroTelefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("numeroTelefono");

                    b.Property<string>("primerApellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("primerApellido");

                    b.Property<string>("primerNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("primerNombre");

                    b.Property<string>("segundoApellido")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("segundoApellido");

                    b.Property<string>("segundoNombre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("segundoNombre");

                    b.Property<string>("tipoDocumento")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("tipoDocumento");

                    b.HasKey("IdCliente");

                    b.ToTable("DatosClientes");
                });
#pragma warning restore 612, 618
        }
    }
}
